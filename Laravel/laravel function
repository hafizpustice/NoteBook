
==========================PAgination array add input =============================
{{$drivers->appends(request()->input())->links()}}

============================Selected lsit========================================
  {{ $item->id == $category_id? 'selected= "selected" ':'' }}
==============================Carbon Function=====================================

{{ \Carbon\Carbon::parse( $item->created_at )->format('d M Y')  }}

============================Belongs to Relation===================================

 public function subcategory() 
    {
        return $this->belongsTo('App\Model\Category', 'sub_category_id', 'id');
    }
    
=================================================================================
if we want to log generate for query purpose then add this code appservice provider boot method

DB::listen(function($query) {
            Log::info(
                $query->sql,
                $query->bindings,
                $query->time
            );
        });
        
 =============================== Eager Load automatically ==================================
 paste this code modal 
 
 protected $with = array('user', 'category');
 
 =====================================Loop Index Id=========================================
 {{ $loop->index + $component->firstItem() }} 
 
 ====================================auto coloumn add when creating ========================
 Add this code any modal 
 
 protected static function boot()
    {
        parent::boot();

        Post::creating(function($model) {
            $model->is_publish =   1;
        });
        
        Post::updating(function($model) {
            $model->is_publish =   1;
        });
    }
    
 ===========================================================================================
Never Update the Column
If you have DB column which you want to be set only once and never updated again, you can set that restriction on Eloquent Model, with a mutator:
class User extends Model
{
    public function setEmailAttribute($value)
    {
        if ($this->email) {
            return;
        }

        $this->attributes['email'] = $value;
    }
}

===============================Helper log method ============================================
function logInfo($message = null)
{
    $data['message'] = $message;
    $data['action'] = class_basename(Route::currentRouteAction());
    $data['url'] = request()->url();
    $data['user_ip_address'] = request()->ip();
    $data['user'] = auth()->user()->name ?? 'Guest';
    Log::error($data);
}
==============================================================================================
